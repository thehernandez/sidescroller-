mport pygame

pygame.init()
screen = pygame.display.set_mode((800, 600))
pygame.display.set_caption('side-scrolling game')
clock = pygame.time.Clock()

player = [100, 450, 0, 0]#player varible
isOnGround = False

#globals
platforms = [(500, 400), (700, 300)] 
player = [100, 450, 0, 0,]
isOnGround = False
offset = 0

def move_player():
    global isOnGround
    global offset 
    if Keys[pygame.K_LEFT]:
        if offset > 260 and player[0]>0:
            player[2] = -5
            
        elif player[0]>400 and offset < -1500:
            player[2] = -5
    
        elif player[0]>0:
            offset += 5
            player[2] = 0
        
        else:
            player[2]=0
    elif Keys[pygame.K_RIGHT]:
        if offset < -1500 and player[0]<750:
            player[2] = 5
        
        elif offset >260 and player[0]<400:
            player[2] = 5
            
        elif player[0]<750:
            offset-= 5
            player[2] = 0
        
        else:
            player[2]=0
    if isOnGround == False:
        player[3] += 1
        
    player[0]+=player[2]
    player[1]+=player[3]
    
    if player[1]> 500:
        isOnGround = True
        player[1] = 500
        
    
        
    #jump mechanics
    if isOnGround == True and Keys[pygame.K_UP]:
           player[3] = -15
           isOnGround = False
    
    
    

def draw_clouds():
    #draws clouds
    for x in range(100, 1800, 300):
        for i in range(3):
            pygame.draw.circle(screen, (255, 255, 255), (x + offset, 100), 40)
            pygame.draw.circle(screen, (255, 255, 255), (x - 50 + offset, 125), 40)
            pygame.draw.circle(screen, (255, 255, 255), (x + 50 + offset, 125), 40)
        pygame.draw.rect(screen, (255, 255, 255), (x- 50 + offset, 100, 100, 65))
        
def draw_trees():
    for x in range(100, 1800,300):
        for i in range(3):
            pygame.draw.circle(screen, (110, 163, 41), (x + offset, 350,), 50)
            pygame.draw.circle(screen, (110, 163, 41), (x - 50 + offset, 400), 50)
            pygame.draw.circle(screen, (110, 163, 41), (x + 50 + offset, 400), 50)
        pygame.draw.rect(screen, (156, 86, 6), (x - 20 + offset, 350, 40, 250))
        
def draw_platforms():
    for i in range(len(platforms)):
        pygame.draw.rect(screen, (150, 10, 10), (platforms[i][0] + offset, platforms[i][1], 100, 30))
        
        
                               
running = True
while running:#main game loop-------------------------------
    clock.tick(60)  
    #input================================================================
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            
            
    Keys = pygame.key.get_pressed()
    #physics---------------------------------------------------------------------------
    move_player()
for i in range(len(platforms)):
    if player[0]+50>platforms[i][0]+offset and player[0]<plaatforms[i][0]+100+offset and player[1]+50>platforms[i][1]
       isOnGround = True
       player[1]=platformes[i][1]-50
       player[3] = 0
       print ("on platform") 
    

    #render---------------------------------------------------------------------------= 
    screen.fill((135, 206, 235))
    draw_trees()
    draw_clouds()
    draw_platforms() 
    pygame.draw.rect(screen, (36, 122, 12), (0, 550, 900, 950))
    pygame.draw.rect(screen, (255, 0, 255), (player[0], player[1], 50, 50))#player
    pygame.display.flip()
    
    
pygame.quit()   
